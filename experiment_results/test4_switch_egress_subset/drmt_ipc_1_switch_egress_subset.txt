********************************** Input DAG ***********************************
# of nodes =  46
# of edges =  87
# of matches =  16
# of actions =  30
Match unit size =  80
# of match units =  16
match_unit_limit =  8
max size of match key in program =  43
max size of match key in hw =  640
# of action fields =  65
action_fields_limit =  32
max number of action fields in program =  8
max number of action fields in hw =  32
match_proc_limit = 1
action_proc_limit = 1
Critical path:  ['rid_MATCH', 'rid_ACTION', 'replica_type_MATCH', 'replica_type_ACTION', 'rewrite_ACTION', 'egress_bd_map_MATCH', 'egress_bd_map_ACTION', 'smac_rewrite_MATCH', 'smac_rewrite_ACTION']
Critical path length = 97 cycles
Upper bound on throughput =  0.49230769230769234



Searching between limits  3  and  100  cycles

period = 52  cycles
******************************* Scheduling DRMT ********************************
****************************** Running rnd sieve *******************************
Looking for greedy feasible solution for 30 seconds
Found Feasible Solution With Latency 96
**************************** Running PRMT + rotator ****************************
*************************** Running greedy heuristic ***************************
****************************** Running ILP solver ******************************
Latencies, PRMT:  118  RND sieve:  96
Picking output from RND sieve
*************************** Running DRMT ILP solver ****************************
Optimal solution found with gap  0.0

period = 27  cycles
******************************* Scheduling DRMT ********************************
****************************** Running rnd sieve *******************************
Looking for greedy feasible solution for 30 seconds
Found Feasible Solution With Latency 96
**************************** Running PRMT + rotator ****************************
*************************** Running greedy heuristic ***************************
****************************** Running ILP solver ******************************
Latencies, PRMT:  118  RND sieve:  96
Picking output from RND sieve
*************************** Running DRMT ILP solver ****************************
Optimal solution found with gap  0.0

period = 15  cycles
******************************* Scheduling DRMT ********************************
****************************** Running rnd sieve *******************************
Looking for greedy feasible solution for 30 seconds
Found Feasible Solution With Latency 96
**************************** Running PRMT + rotator ****************************
*************************** Running greedy heuristic ***************************
****************************** Running ILP solver ******************************
Latencies, PRMT:  118  RND sieve:  96
Picking output from RND sieve
*************************** Running DRMT ILP solver ****************************
Optimal solution found with gap  0.0

period = 9  cycles
******************************* Scheduling DRMT ********************************
****************************** Running rnd sieve *******************************
Looking for greedy feasible solution for 30 seconds
Found Feasible Solution With Latency 106
Found Feasible Solution With Latency 97
**************************** Running PRMT + rotator ****************************
*************************** Running greedy heuristic ***************************
****************************** Running ILP solver ******************************
Latencies, PRMT:  119  RND sieve:  97
Picking output from RND sieve
*************************** Running DRMT ILP solver ****************************
Optimal solution found with gap  0.0

period = 6  cycles
******************************* Scheduling DRMT ********************************
****************************** Running rnd sieve *******************************
Looking for greedy feasible solution for 30 seconds
**************************** Running PRMT + rotator ****************************
*************************** Running greedy heuristic ***************************
****************************** Running ILP solver ******************************
Picking output from PRMT
Latency for PRMT  122
*************************** Running DRMT ILP solver ****************************
Optimal solution found with gap  0.0

period = 4  cycles
******************************* Scheduling DRMT ********************************
****************************** Running rnd sieve *******************************
Looking for greedy feasible solution for 30 seconds
**************************** Running PRMT + rotator ****************************
*************************** Running greedy heuristic ***************************
****************************** Running ILP solver ******************************
Can't find a solution in rotator, match const. violated
Both heuristics returned nothing
*************************** Running DRMT ILP solver ****************************
Hit time limit or interrupted, no solution found yet

period = 5  cycles
******************************* Scheduling DRMT ********************************
****************************** Running rnd sieve *******************************
Looking for greedy feasible solution for 30 seconds
**************************** Running PRMT + rotator ****************************
*************************** Running greedy heuristic ***************************
****************************** Running ILP solver ******************************
Picking output from PRMT
Latency for PRMT  118
*************************** Running DRMT ILP solver ****************************
Optimal solution found with gap  0.0

Best achieved throughput = 1 packet every 5 cycles
Schedule length (thread count) = 99 cycles
Critical path length = 97 cycles



******************* First scheduling period on one processor********************
|           t=0            |           t=1            |           t=2            |           t=3            |
|     egress_nat_MATCH     |                          |                          |                          |
|egress_port_mapping_MATCH |                          |                          |                          |
|       mirror_MATCH       |                          |                          |                          |
|        rid_MATCH         |                          |                          |                          |
|     vlan_decap_MATCH     |                          |                          |                          |

|           t=20           |           t=21           |           t=22           |           t=23           |
|                          |                          |      mirror_ACTION       |                          |
|                          |                          |        rid_ACTION        |                          |
|                          |                          |      _condition_42       |                          |
|                          |                          |      _condition_43       |                          |
|                          |                          |      _condition_41       |                          |
|                          |                          |      _condition_52       |                          |

|           t=24           |           t=25           |           t=26           |           t=27           |
|      rewrite_MATCH       |                          |                          |                          |
|    replica_type_MATCH    |                          |                          |                          |

|           t=32           |           t=33           |           t=34           |           t=35           |
|                          | rewrite_multicast_MATCH  |                          |                          |

|           t=44           |           t=45           |           t=46           |           t=47           |
|                          |                          |   replica_type_ACTION    |                          |
|                          |                          |      _condition_44       |                          |
|                          |                          |      _condition_50       |                          |
|                          |                          |egress_port_mapping_ACTION|                          |

|           t=48           |           t=49           |           t=50           |           t=51           |
|                          |                          |      rewrite_ACTION      |                          |
|                          |                          |      _condition_46       |                          |
|                          |                          |      _condition_45       |                          |

|           t=52           |           t=53           |           t=54           |           t=55           |
| egress_vlan_xlate_MATCH  |                          |                          |                          |
|        mtu_MATCH         |                          |                          |                          |
|   egress_qos_map_MATCH   |                          |                          |                          |
|  egress_bd_stats_MATCH   |                          |                          |                          |
|   egress_bd_map_MATCH    |                          |                          |                          |

|           t=72           |           t=73           |           t=74           |           t=75           |
|                          |                          |   egress_filter_ACTION   |                          |
|                          |                          |  egress_qos_map_ACTION   |                          |
|                          |                          |  egress_bd_stats_ACTION  |                          |
|                          |                          |   egress_bd_map_ACTION   |                          |
|                          |                          |      _condition_49       |                          |
|                          |                          |      _condition_47       |                          |
|                          |                          | rewrite_multicast_ACTION |                          |
|                          |                          |        mtu_ACTION        |                          |
|                          |                          |    vlan_decap_ACTION     |                          |

|           t=76           |           t=77           |           t=78           |           t=79           |
|    smac_rewrite_MATCH    |                          |                          |                          |
| egress_system_acl_MATCH  |                          |                          |                          |
|     l3_rewrite_MATCH     |                          |                          |                          |

|           t=96           |           t=97           |           t=98           |
|                          |                          |      _condition_51       |
|                          |                          | egress_vlan_xlate_ACTION |
|                          |                          |    egress_nat_ACTION     |
|                          |                          |      _condition_48       |
|                          |                          |   smac_rewrite_ACTION    |
|                          |                          |    l3_rewrite_ACTION     |
|                          |                          |egress_filter_drop_ACTION |
|                          |                          | egress_system_acl_ACTION |

 


************************* Steady state on one processor*************************
******************p[u] is packet from u scheduling periods ago******************
|              t=0              |              t=1              |              t=2              |              t=3              |
|     p[0].egress_nat_MATCH     |   p[9].replica_type_ACTION    | p[10].egress_vlan_xlate_MATCH | p[6].rewrite_multicast_MATCH  |
|p[0].egress_port_mapping_MATCH |   p[15].smac_rewrite_MATCH    |      p[4].mirror_ACTION       |      p[19]._condition_51      |
|     p[10].rewrite_ACTION      | p[15].egress_system_acl_MATCH |        p[10].mtu_MATCH        |p[19].egress_vlan_xlate_ACTION |
|      p[10]._condition_46      |      p[9]._condition_44       |        p[4].rid_ACTION        |    p[19].egress_nat_ACTION    |
|      p[10]._condition_45      |      p[9]._condition_50       |      p[4]._condition_42       |      p[19]._condition_48      |
|       p[0].mirror_MATCH       |p[9].egress_port_mapping_ACTION|      p[4]._condition_43       |   p[19].smac_rewrite_ACTION   |
|        p[0].rid_MATCH         |    p[15].l3_rewrite_MATCH     |      p[4]._condition_41       |    p[19].l3_rewrite_ACTION    |
|     p[0].vlan_decap_MATCH     |                               |      p[4]._condition_52       |p[19].egress_filter_drop_ACTION|
|                               |                               |  p[10].egress_qos_map_MATCH   |p[19].egress_system_acl_ACTION |
|                               |                               |  p[10].egress_bd_stats_MATCH  |                               |
|                               |                               |   p[10].egress_bd_map_MATCH   |                               |

|              t=4              |
|  p[14].egress_filter_ACTION   |
|  p[14].egress_qos_map_ACTION  |
| p[14].egress_bd_stats_ACTION  |
|  p[14].egress_bd_map_ACTION   |
|      p[14]._condition_49      |
|      p[4].rewrite_MATCH       |
|      p[14]._condition_47      |
|p[14].rewrite_multicast_ACTION |
|       p[14].mtu_ACTION        |
|    p[14].vlan_decap_ACTION    |
|    p[4].replica_type_MATCH    |

 


Match units usage (max = 8 units) on one processor
|t=0|t=1|t=2|t=3|t=4|
| 5 | 3 | 5 | 1 | 2 |


Action fields usage (max = 32 fields) on one processor
|t=0|t=1|t=2|t=3|t=4|
| 8 | 7 |13 |23 |14 |


Match packets (max = 1 match packets) on one processor
|t=0|t=1|t=2|t=3|t=4|
| 1 | 1 | 1 | 1 | 1 |


Action packets (max = 1 action packets) on one processor
|t=0|t=1|t=2|t=3|t=4|
| 1 | 1 | 1 | 1 | 1 |


